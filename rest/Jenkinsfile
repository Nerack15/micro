pipeline {
    agent any
    tools {
        gradle 'Gradle 7.5.1'
    }
    stages {
        stage('Build') {
            steps {
                script{
                    sh """
                    cd rest
                    gradle build
                    """
                }
            }
        }
        stage('test with Sonarqube') {
            steps {
                script{
                    def scannerHome = tool 'Sonarqube'
                    withSonarQubeEnv('Sonarqube'){
                        sh"""
                        cd rest 
                        gradle sonarqube \
                        -Dsonar.project=sonarqube \
                        -Dsonar.host.url=http://192.168.2.143:9000 \
                        -Dsonar.login=274e66b2b616791670b6cc2c4bc86ab44d5c6e10 \
                        -D sonar.sourceEncoding=UTF-8 \
                        -D sonar.language=java 
                        """
                    }
                }
            }
        }
        stage('Build & Push Docker Image') {
            agent {
                label 'Slave1'
            }
            steps {
                script{
                    sh"""
                    cd rest
                    docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
                    docker build -t $DOCKER_USER/test:1.0 .
                    docker push $DOCKER_USER/test:1.0
                    """
                }
                echo 'succesfull'
            }
        }
        stage('Deployment') {
            steps {
                script{
                    sh """
                    az login --service-principal --username $AZ_USER --password $AZ_PASS --tenant $AZ_TENANT
                    az account set --subscription b68641c8-eca9-416e-80c2-05e8fcb71cfc
                    az aks get-credentials --resource-group nerack-resources --name nerack-cluster
                    cd rest/k8s
                    kubectl apply -f ms-rest.yaml
                    """
                }
            }
        }
    }
}
